package com.datas.easyorder.db.entity;
// Generated 2018-3-7 11:20:55 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UserGroup generated by hbm2java
 */
@Entity
@Table(name = "user_group", catalog = "yomi")
public class UserGroup implements java.io.Serializable {

	private Long id;
	private String groupName;
	private Date creatTime;
	private Date modifyTime;
	private Set<UserPrivilege> userPrivileges = new HashSet<UserPrivilege>(0);
	private Set<User> users = new HashSet<User>(0);

	public UserGroup() {
	}

	public UserGroup(String groupName, Date creatTime, Date modifyTime, Set<UserPrivilege> userPrivileges,
			Set<User> users) {
		this.groupName = groupName;
		this.creatTime = creatTime;
		this.modifyTime = modifyTime;
		this.userPrivileges = userPrivileges;
		this.users = users;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "group_name", length = 512)
	public String getGroupName() {
		return this.groupName;
	}

	public void setGroupName(String groupName) {
		this.groupName = groupName;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creat_time", length = 19)
	public Date getCreatTime() {
		return this.creatTime;
	}

	public void setCreatTime(Date creatTime) {
		this.creatTime = creatTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modify_time", length = 19)
	public Date getModifyTime() {
		return this.modifyTime;
	}

	public void setModifyTime(Date modifyTime) {
		this.modifyTime = modifyTime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userGroup")
	public Set<UserPrivilege> getUserPrivileges() {
		return this.userPrivileges;
	}

	public void setUserPrivileges(Set<UserPrivilege> userPrivileges) {
		this.userPrivileges = userPrivileges;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userGroup")
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

}

package com.datas.easyorder.db.entity;
// Generated 2018-9-4 16:40:06 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Branch generated by hbm2java
 */
@Entity
@Table(name = "branch", catalog = "yomi")
public class Branch implements java.io.Serializable {

	private Long id;
	private String branchName;
	private String email;
	private String tel;
	private String mobile;
	private String address;
	private String description;
	private String type;
	private byte status;
	private String contactName;
	@JsonIgnore
	private Set<BranchProduct> branchProducts = new HashSet<BranchProduct>(0);
	@JsonIgnore
	private Set<Order> orders = new HashSet<Order>(0);
	@JsonIgnore
	private Set<Customer> customers = new HashSet<Customer>(0);

	public Branch() {
	}

	public Branch(String branchName, byte status) {
		this.branchName = branchName;
		this.status = status;
	}

	public Branch(String branchName, String email, String tel, String mobile, String address, String description,
			String type, byte status, String contactName, Set<BranchProduct> branchProducts, Set<Order> orders,
			Set<Customer> customers) {
		this.branchName = branchName;
		this.email = email;
		this.tel = tel;
		this.mobile = mobile;
		this.address = address;
		this.description = description;
		this.type = type;
		this.status = status;
		this.contactName = contactName;
		this.branchProducts = branchProducts;
		this.orders = orders;
		this.customers = customers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "branch_name", nullable = false)
	public String getBranchName() {
		return this.branchName;
	}

	public void setBranchName(String branchName) {
		this.branchName = branchName;
	}

	@Column(name = "email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "tel")
	public String getTel() {
		return this.tel;
	}

	public void setTel(String tel) {
		this.tel = tel;
	}

	@Column(name = "mobile")
	public String getMobile() {
		return this.mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

	@Column(name = "address", length = 1024)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "description", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "type")
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "status", nullable = false)
	public byte getStatus() {
		return this.status;
	}

	public void setStatus(byte status) {
		this.status = status;
	}

	@Column(name = "contact_name")
	public String getContactName() {
		return this.contactName;
	}

	public void setContactName(String contactName) {
		this.contactName = contactName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "branch")
	public Set<BranchProduct> getBranchProducts() {
		return this.branchProducts;
	}

	public void setBranchProducts(Set<BranchProduct> branchProducts) {
		this.branchProducts = branchProducts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "branch")
	public Set<Order> getOrders() {
		return this.orders;
	}

	public void setOrders(Set<Order> orders) {
		this.orders = orders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "branch")
	public Set<Customer> getCustomers() {
		return this.customers;
	}

	public void setCustomers(Set<Customer> customers) {
		this.customers = customers;
	}

}

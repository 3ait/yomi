package com.datas.easyorder.db.entity;
// Generated 2018-3-7 11:20:55 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Article generated by hbm2java
 */
@Entity
@Table(name = "article", catalog = "ultimatelife")
public class Article implements java.io.Serializable {

	private Long id;
	@JsonIgnore
	private Menu menu;
	private String title;
	private String subTitle;
	private String urlTitle;
	private String author;
	private String content;
	private String keywords;
	private String defaultSrc;
	private Byte status;
	private Integer clickNum;
	private Long productAttrValueId;
	private Byte hot;
	private Byte recommend;
	private Integer position;
	private Date createTime;
	private Date modifyTime;
	private String seoKeywords;
	private String seoDesc;
	@JsonIgnore
	private Set<Attachment> attachments = new HashSet<Attachment>(0);
	@JsonIgnore
	private Set<Reply> replies = new HashSet<Reply>(0);
	@JsonIgnore
	private Set<Comment> comments = new HashSet<Comment>(0);

	public Article() {
	}

	public Article(String title) {
		this.title = title;
	}

	public Article(Menu menu, String title, String subTitle, String urlTitle, String author, String content,
			String keywords, String defaultSrc, Byte status, Integer clickNum,Long productAttrValueId, Byte hot, Byte recommend,
			Integer position, Date createTime, Date modifyTime, String seoKeywords, String seoDesc,
			Set<Attachment> attachments, Set<Reply> replies, Set<Comment> comments) {
		this.menu = menu;
		this.title = title;
		this.subTitle = subTitle;
		this.urlTitle = urlTitle;
		this.author = author;
		this.content = content;
		this.keywords = keywords;
		this.defaultSrc = defaultSrc;
		this.status = status;
		this.clickNum = clickNum;
		this.productAttrValueId = productAttrValueId;
		this.hot = hot;
		this.recommend = recommend;
		this.position = position;
		this.createTime = createTime;
		this.modifyTime = modifyTime;
		this.seoKeywords = seoKeywords;
		this.seoDesc = seoDesc;
		this.attachments = attachments;
		this.replies = replies;
		this.comments = comments;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "menu_id")
	public Menu getMenu() {
		return this.menu;
	}

	public void setMenu(Menu menu) {
		this.menu = menu;
	}

	@Column(name = "title", nullable = false, length = 1024)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "sub_title", length = 1024)
	public String getSubTitle() {
		return this.subTitle;
	}

	public void setSubTitle(String subTitle) {
		this.subTitle = subTitle;
	}

	@Column(name = "url_title")
	public String getUrlTitle() {
		return this.urlTitle;
	}

	public void setUrlTitle(String urlTitle) {
		this.urlTitle = urlTitle;
	}

	@Column(name = "author")
	public String getAuthor() {
		return this.author;
	}

	public void setAuthor(String author) {
		this.author = author;
	}

	@Column(name = "content")
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Column(name = "keywords")
	public String getKeywords() {
		return this.keywords;
	}

	public void setKeywords(String keywords) {
		this.keywords = keywords;
	}

	@Column(name = "default_src", length = 1024)
	public String getDefaultSrc() {
		return this.defaultSrc;
	}

	public void setDefaultSrc(String defaultSrc) {
		this.defaultSrc = defaultSrc;
	}

	@Column(name = "status")
	public Byte getStatus() {
		return this.status;
	}

	public void setStatus(Byte status) {
		this.status = status;
	}

	@Column(name = "click_num")
	public Integer getClickNum() {
		return this.clickNum;
	}

	public void setClickNum(Integer clickNum) {
		this.clickNum = clickNum;
	}
	
	@Column(name = "product_attr_value_id")
	public Long getProductAttrValueId() {
		return productAttrValueId;
	}

	public void setProductAttrValueId(Long productAttrValueId) {
		this.productAttrValueId = productAttrValueId;
	}

	@Column(name = "hot")
	public Byte getHot() {
		return this.hot;
	}

	public void setHot(Byte hot) {
		this.hot = hot;
	}

	@Column(name = "recommend")
	public Byte getRecommend() {
		return this.recommend;
	}

	public void setRecommend(Byte recommend) {
		this.recommend = recommend;
	}

	@Column(name = "position")
	public Integer getPosition() {
		return this.position;
	}

	public void setPosition(Integer position) {
		this.position = position;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_time", length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modify_time", length = 19)
	public Date getModifyTime() {
		return this.modifyTime;
	}

	public void setModifyTime(Date modifyTime) {
		this.modifyTime = modifyTime;
	}

	@Column(name = "seo_keywords", length = 1024)
	public String getSeoKeywords() {
		return this.seoKeywords;
	}

	public void setSeoKeywords(String seoKeywords) {
		this.seoKeywords = seoKeywords;
	}

	@Column(name = "seo_desc", length = 1024)
	public String getSeoDesc() {
		return this.seoDesc;
	}

	public void setSeoDesc(String seoDesc) {
		this.seoDesc = seoDesc;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "article")
	public Set<Attachment> getAttachments() {
		return this.attachments;
	}

	public void setAttachments(Set<Attachment> attachments) {
		this.attachments = attachments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "article")
	public Set<Reply> getReplies() {
		return this.replies;
	}

	public void setReplies(Set<Reply> replies) {
		this.replies = replies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "article")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

}

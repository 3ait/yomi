package com.datas.easyorder.db.entity;
// Generated 2018-3-7 11:20:55 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "yomi")
public class User implements java.io.Serializable {

	private Long id;
	@JsonIgnore
	private UserCompany userCompany;
	@JsonIgnore
	private UserGroup userGroup;
	private String name;
	private String email;
	private String password;
	private String type;
	private String phone;
	private String status;
	private Date createTime;
	private Date modifyTime;
	@JsonIgnore
	private Set<CustomerCommission> customerCommissions = new HashSet<CustomerCommission>(0);
	@JsonIgnore
	private Set<Order> orders = new HashSet<Order>(0);
	@JsonIgnore
	private Set<Invoice> invoices = new HashSet<Invoice>(0);
	@JsonIgnore
	private Set<CustomerPaymentHistory> customerPaymentHistories = new HashSet<CustomerPaymentHistory>(0);

	public User() {
	}

	public User(UserCompany userCompany, UserGroup userGroup) {
		this.userCompany = userCompany;
		this.userGroup = userGroup;
	}

	public User(UserCompany userCompany, UserGroup userGroup, String name, String email, String password, String type,
			String phone, String status, Date createTime, Date modifyTime, Set<CustomerCommission> customerCommissions,
			Set<Order> orders, Set<Invoice> invoices, Set<CustomerPaymentHistory> customerPaymentHistories) {
		this.userCompany = userCompany;
		this.userGroup = userGroup;
		this.name = name;
		this.email = email;
		this.password = password;
		this.type = type;
		this.phone = phone;
		this.status = status;
		this.createTime = createTime;
		this.modifyTime = modifyTime;
		this.customerCommissions = customerCommissions;
		this.orders = orders;
		this.invoices = invoices;
		this.customerPaymentHistories = customerPaymentHistories;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_company_id", nullable = false)
	public UserCompany getUserCompany() {
		return this.userCompany;
	}

	public void setUserCompany(UserCompany userCompany) {
		this.userCompany = userCompany;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_group_id", nullable = false)
	public UserGroup getUserGroup() {
		return this.userGroup;
	}

	public void setUserGroup(UserGroup userGroup) {
		this.userGroup = userGroup;
	}

	@Column(name = "name", length = 512)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password")
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "type")
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "phone")
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "status", length = 9)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_time", length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modify_time", length = 19)
	public Date getModifyTime() {
		return this.modifyTime;
	}

	public void setModifyTime(Date modifyTime) {
		this.modifyTime = modifyTime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<CustomerCommission> getCustomerCommissions() {
		return this.customerCommissions;
	}

	public void setCustomerCommissions(Set<CustomerCommission> customerCommissions) {
		this.customerCommissions = customerCommissions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Order> getOrders() {
		return this.orders;
	}

	public void setOrders(Set<Order> orders) {
		this.orders = orders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Invoice> getInvoices() {
		return this.invoices;
	}

	public void setInvoices(Set<Invoice> invoices) {
		this.invoices = invoices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<CustomerPaymentHistory> getCustomerPaymentHistories() {
		return this.customerPaymentHistories;
	}

	public void setCustomerPaymentHistories(Set<CustomerPaymentHistory> customerPaymentHistories) {
		this.customerPaymentHistories = customerPaymentHistories;
	}

}
